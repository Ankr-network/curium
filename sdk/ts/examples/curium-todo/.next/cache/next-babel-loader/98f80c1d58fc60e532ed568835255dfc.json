{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/scott/work/bluzelle/blzjs/examples/curium-todo/components/todo/AddTodo.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Button, Form } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport { storeTodo } from \"../../services/TodoService\";\nexport var AddTodo = function AddTodo() {\n  var _useState = useState(''),\n      key = _useState[0],\n      setKey = _useState[1];\n\n  var _useState2 = useState(''),\n      bodyValue = _useState2[0],\n      setBodyValue = _useState2[1];\n\n  var addTodo = function addTodo() {\n    storeTodo({\n      body: bodyValue\n    });\n    setKey(Date.now().toString());\n    setBodyValue('');\n  };\n\n  var updateBodyValue = function updateBodyValue(ev) {\n    setBodyValue(ev.target.value);\n  };\n\n  return __jsx(Form, {\n    onSubmit: function onSubmit(ev) {\n      addTodo();\n      ev.preventDefault();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Group, {\n    controlId: \"formTodo\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, __jsx(Form.Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, \"Add a new todo\"), __jsx(Form.Control, {\n    autoComplete: \"off\",\n    key: key,\n    autoFocus: true,\n    value: bodyValue,\n    onChange: updateBodyValue,\n    placeholder: \"Enter text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }), __jsx(Form.Text, {\n    className: \"text-muted\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  })), __jsx(Button, {\n    variant: \"primary\",\n    onClick: addTodo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"Add todo\"));\n};","map":{"version":3,"sources":["/home/scott/work/bluzelle/blzjs/examples/curium-todo/components/todo/AddTodo.tsx"],"names":["Button","Form","useState","storeTodo","AddTodo","key","setKey","bodyValue","setBodyValue","addTodo","body","Date","now","toString","updateBodyValue","ev","target","value","preventDefault"],"mappings":";;;;;AAAA,SAAQA,MAAR,EAAgBC,IAAhB,QAA2B,iBAA3B;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,SAAQC,SAAR,QAAwB,4BAAxB;AAEA,OAAO,IAAMC,OAAiB,GAAG,SAApBA,OAAoB,GAAM;AAAA,kBACbF,QAAQ,CAAS,EAAT,CADK;AAAA,MAC5BG,GAD4B;AAAA,MACvBC,MADuB;;AAAA,mBAEDJ,QAAQ,CAAS,EAAT,CAFP;AAAA,MAE5BK,SAF4B;AAAA,MAEjBC,YAFiB;;AAKnC,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAElBN,IAAAA,SAAS,CAAC;AACNO,MAAAA,IAAI,EAAEH;AADA,KAAD,CAAT;AAGID,IAAAA,MAAM,CAACK,IAAI,CAACC,GAAL,GAAWC,QAAX,EAAD,CAAN;AACAL,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACP,GAPD;;AASA,MAAMM,eAAe,GAAG,SAAlBA,eAAkB,CAACC,EAAD,EAAQ;AAC5BP,IAAAA,YAAY,CAACO,EAAE,CAACC,MAAH,CAAUC,KAAX,CAAZ;AACH,GAFD;;AAIA,SACI,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAE,kBAACF,EAAD,EAAQ;AAACN,MAAAA,OAAO;AAAIM,MAAAA,EAAE,CAACG,cAAH;AAAoB,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI,MAAC,IAAD,CAAM,OAAN;AAAe,IAAA,YAAY,EAAC,KAA5B;AAAkC,IAAA,GAAG,EAAEb,GAAvC;AAA4C,IAAA,SAAS,MAArD;AAAsD,IAAA,KAAK,EAAEE,SAA7D;AAAyE,IAAA,QAAQ,EAAEO,eAAnF;AAAoG,IAAA,WAAW,EAAC,YAAhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ,EAOI,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,OAAO,EAAEL,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,CADJ;AAaH,CA/BM","sourcesContent":["import {Button, Form} from \"react-bootstrap\";\nimport {useState} from \"react\";\nimport {storeTodo} from \"../../services/TodoService\";\n\nexport const AddTodo: React.FC = () => {\n    const [key, setKey] = useState<string>('');\n    const [bodyValue, setBodyValue] = useState<string>('');\n\n\n    const addTodo = () => {\n\n        storeTodo({\n            body: bodyValue\n        })\n            setKey(Date.now().toString());\n            setBodyValue('');\n    }\n\n    const updateBodyValue = (ev) => {\n        setBodyValue(ev.target.value);\n    }\n\n    return (\n        <Form onSubmit={(ev) => {addTodo(); ev.preventDefault()}}>\n            <Form.Group controlId=\"formTodo\">\n                <Form.Label>Add a new todo</Form.Label>\n                <Form.Control  autoComplete=\"off\" key={key} autoFocus value={bodyValue}  onChange={updateBodyValue} placeholder=\"Enter text\" />\n                <Form.Text className=\"text-muted\"/>\n            </Form.Group>\n\n            <Button variant=\"primary\" onClick={addTodo} >\n                Add todo\n            </Button>\n        </Form>\n    )\n}"]},"metadata":{},"sourceType":"module"}