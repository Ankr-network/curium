{"ast":null,"code":"var _jsxFileName = \"/home/scott/work/bluzelle/blzjs/examples/curium-todo/components/ParamsForm.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Button, Form } from \"react-bootstrap\";\nimport { params as bluzelleParams } from '../services/TodoService';\nimport { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { extend } from 'lodash';\nexport const ParamsForm = () => {\n  const {\n    0: params,\n    1: setParams\n  } = useState(bluzelleParams);\n  const router = useRouter();\n  const {\n    0: connecting,\n    1: setConnecting\n  } = useState(false);\n\n  const updateParam = name => ev => setParams(_objectSpread({}, params, {\n    [name]: ev.target.value\n  }));\n\n  const formSubmit = ev => {\n    setConnecting(true);\n    extend(bluzelleParams, params);\n    ev.preventDefault();\n    router.push('/todo');\n  };\n\n  return __jsx(Form, {\n    onSubmit: formSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, __jsx(ParamFormField, {\n    label: \"Mnemonic\",\n    value: params.mnemonic,\n    onChange: updateParam('mnemonic'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }), __jsx(ParamFormField, {\n    label: \"Endpoint\",\n    value: params.endpoint,\n    onChange: updateParam('endpoint'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }), __jsx(ParamFormField, {\n    label: \"Chain ID\",\n    value: params.chain_id,\n    onChange: updateParam('chain_id'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }), __jsx(ParamFormField, {\n    label: \"UUID\",\n    value: params.uuid,\n    onChange: updateParam('uuid'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }), __jsx(Button, {\n    variant: \"primary\",\n    onClick: formSubmit,\n    disabled: connecting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, connecting ? 'Connecting...' : 'Connect'));\n};\nexport const ParamFormField = (_ref) => {\n  let {\n    label\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"label\"]);\n\n  return __jsx(Form.Group, {\n    controlId: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, label), __jsx(Form.Control, _extends({\n    autoComplete: \"off\"\n  }, props, {\n    onBlur: props.onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  })), __jsx(Form.Text, {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }));\n};","map":{"version":3,"sources":["/home/scott/work/bluzelle/blzjs/examples/curium-todo/components/ParamsForm.tsx"],"names":["Button","Form","params","bluzelleParams","useState","useRouter","extend","ParamsForm","setParams","router","connecting","setConnecting","updateParam","name","ev","target","value","formSubmit","preventDefault","push","mnemonic","endpoint","chain_id","uuid","ParamFormField","label","props","onChange"],"mappings":"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","sourcesContent":["import {Button, Form, Spinner} from \"react-bootstrap\";\nimport {params as bluzelleParams} from '../services/TodoService'\nimport {ChangeEvent, EventHandler, useState} from \"react\";\nimport {useRouter} from \"next/router\";\nimport {extend} from 'lodash'\nimport {BluzelleConfig} from \"../../../client/src/BluzelleConfig\";\n\nexport const ParamsForm: React.FC = () => {\n    const [params, setParams] = useState<BluzelleConfig>(bluzelleParams);\n    const router = useRouter();\n    const [connecting, setConnecting] = useState<boolean>(false);\n\n    const updateParam = (name: string) => (ev: ChangeEvent<HTMLInputElement>) => setParams({...params, [name]: ev.target.value})\n\n    const formSubmit = ev => {\n        setConnecting(true);\n        extend(bluzelleParams, params);\n        ev.preventDefault();\n        router.push('/todo');\n    }\n\n    return (\n        <Form onSubmit={formSubmit}>\n            <ParamFormField label=\"Mnemonic\" value={params.mnemonic} onChange={updateParam('mnemonic')}/>\n            <ParamFormField label=\"Endpoint\" value={params.endpoint} onChange={updateParam('endpoint')}/>\n            <ParamFormField label=\"Chain ID\" value={params.chain_id} onChange={updateParam('chain_id')}/>\n            <ParamFormField label=\"UUID\" value={params.uuid} onChange={updateParam('uuid')}/>\n            <Button variant=\"primary\" onClick={formSubmit} disabled={connecting}>\n                {connecting ? 'Connecting...' : 'Connect'}\n            </Button>\n        </Form>\n    )\n}\n\nexport const ParamFormField: React.FC<{ label: string, value: string, autoFocus?: boolean, onChange: EventHandler<ChangeEvent> }> = ({label, ...props}) => (\n    <Form.Group controlId=\"label\">\n        <Form.Label>{label}</Form.Label>\n        <Form.Control autoComplete=\"off\" {...props} onBlur={props.onChange}/>\n        <Form.Text className=\"text-muted\"/>\n    </Form.Group>\n\n)"]},"metadata":{},"sourceType":"module"}