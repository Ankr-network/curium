{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { bluzelle } from \"@bluzelle/sdk-js\";\nimport { extend } from 'lodash';\nimport { bluzelleConfig, userConfig } from \"../../example-config\";\nexport var params = bluzelleConfig;\nexport var userParams = userConfig;\nvar todosListeners = [];\nvar todos = {};\nvar bz = bluzelle(params);\nexport var initialLoadTodos = function initialLoadTodos() {\n  return loadTodos();\n};\nexport var onTodoListUpdated = function onTodoListUpdated(fn) {\n  todosListeners.push(fn);\n};\nexport var storeTodo = function storeTodo(todo) {\n  var time = new Date().toISOString();\n  todos[time] = _objectSpread({}, todo, {\n    time: time,\n    synced: false,\n    done: false\n  });\n  notifyListeners();\n\n  var storedTodo = _objectSpread({}, todo, {\n    time: time,\n    done: false\n  });\n\n  return bz.then(function (client) {\n    return client.db.tx.Create({\n      creator: client.db.address,\n      // the creator of the transaction should always be the sender's address*\n      uuid: userConfig.uuid,\n      key: time,\n      value: new TextEncoder().encode(JSON.stringify(storedTodo)),\n      // values are stored as byte arrays \n      metadata: new Uint8Array(),\n      lease: {\n        days: 0,\n        seconds: 0,\n        years: 0,\n        hours: 1,\n        minutes: 0\n      } // Lease object to specify lifespan of key-value**\n\n    });\n  }).then(function () {\n    return todos[time].synced = true;\n  }).then(notifyListeners);\n};\n\nvar notifyListeners = function notifyListeners() {\n  return todosListeners.forEach(function (listener) {\n    return listener(Object.values(todos));\n  });\n};\n\nvar loadTodos = function loadTodos() {\n  return bz.then(function (client) {\n    return client.db.q.KeyValues({\n      uuid: client.db.address\n    });\n  }).then(function (result) {\n    return result.keyValues.map(function (it) {\n      return _objectSpread({}, JSON.parse(new TextDecoder().decode(it.value)), {\n        synced: true\n      });\n    });\n  }).then(function (list) {\n    return list.map(function (it) {\n      return todos[it.time] = extend(todos[it.time] || {}, it);\n    });\n  }).then(notifyListeners);\n};\n\nexport var deleteTodo = function deleteTodo(todo) {\n  todo.synced = false;\n  notifyListeners();\n  return bz.then(function (client) {\n    return client.db.tx.DeleteAll({\n      creator: client.db.address,\n      uuid: userConfig.uuid\n    });\n  }).then(function () {\n    return delete todos[todo.time];\n  }).then(notifyListeners);\n};\nexport var toggleTodoDone = function toggleTodoDone(todo) {\n  todo.done = !todo.done;\n  todo.synced = false;\n  notifyListeners();\n  var storedTodo = {\n    done: todo.done,\n    body: todo.body,\n    time: todo.time\n  };\n  return bz.then(function (client) {\n    return client.db.tx.Upsert({\n      creator: client.db.address,\n      uuid: userConfig.uuid,\n      key: todo.time,\n      value: new TextEncoder().encode(JSON.stringify(storedTodo)),\n      metadata: new Uint8Array(),\n      lease: {\n        days: 0,\n        seconds: 0,\n        years: 0,\n        hours: 1,\n        minutes: 0\n      }\n    });\n  }).then(function () {\n    return todo.synced = true;\n  }).then(notifyListeners);\n};","map":{"version":3,"sources":["/home/scott/work/bluzelle/curium/sdk/ts/examples/curium-todo/services/TodoService.ts"],"names":["bluzelle","extend","bluzelleConfig","userConfig","params","userParams","todosListeners","todos","bz","initialLoadTodos","loadTodos","onTodoListUpdated","fn","push","storeTodo","todo","time","Date","toISOString","synced","done","notifyListeners","storedTodo","then","client","db","tx","Create","creator","address","uuid","key","value","TextEncoder","encode","JSON","stringify","metadata","Uint8Array","lease","days","seconds","years","hours","minutes","forEach","listener","Object","values","q","KeyValues","result","keyValues","map","it","parse","TextDecoder","decode","list","deleteTodo","DeleteAll","toggleTodoDone","body","Upsert"],"mappings":"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","sourcesContent":["import {bluzelle} from \"@bluzelle/sdk-js\";\nimport {extend, memoize} from 'lodash'\nimport {StoredTodo, Todo} from \"../model/Todo\";\nimport {bluzelleConfig, userConfig} from \"../../example-config\";\n\nexport const params:any = bluzelleConfig;\nexport const userParams:any = userConfig;\n\nconst todosListeners = [];\nconst todos: Record<string, Todo> = {};\n\nconst bz = bluzelle(params);\n\nexport const initialLoadTodos = () => loadTodos();\n\nexport const onTodoListUpdated = (fn: (todos: Todo[]) => void) => {\n    todosListeners.push(fn);\n}\n\n\nexport const storeTodo = (todo: Pick<Todo, 'body'>): Promise<any> => {\n    const time = new Date().toISOString();\n    todos[time] = {...todo, time, synced: false, done: false};\n    notifyListeners();\n    const storedTodo: StoredTodo = {...todo, time, done: false};\n    return bz\n        .then(client => client.db.tx.Create({\t\n            creator: client.db.address,     \t\t\t// the creator of the transaction should always be the sender's address*\n            uuid: userConfig.uuid,\t\n            key: time,\n            value: new TextEncoder().encode(JSON.stringify(storedTodo)),\t// values are stored as byte arrays \n            metadata: new Uint8Array(),\t\t\t\n            lease: {days: 0, seconds: 0, years: 0, hours: 1, minutes: 0} // Lease object to specify lifespan of key-value**\n       }))\n        .then(() => todos[time].synced = true)\n        .then(notifyListeners)\n}\n\nconst notifyListeners = () =>\n todosListeners.forEach(listener => listener(Object.values(todos)));\n\nconst loadTodos = (): Promise<void> =>\n        bz\n        .then(client => client.db.q.KeyValues({uuid:client.db.address}))\n        .then(result => result.keyValues.map(it => ({...JSON.parse(new TextDecoder().decode(it.value)), synced: true})))\n        .then(list => list.map(it => todos[it.time] = extend(todos[it.time] || {},  it)))\n        .then(notifyListeners)\n\nexport const deleteTodo = (todo: Todo):Promise<any> => {\n    todo.synced = false;\n    notifyListeners();\n    return bz\n        .then(client => client.db.tx.DeleteAll({\n            creator: client.db.address,\n            uuid: userConfig.uuid\n        }))\n        .then(() => delete todos[todo.time])\n        .then(notifyListeners);\n}\n\nexport const toggleTodoDone = (todo: Todo): Promise<any> => {\n    todo.done = !todo.done;\n    todo.synced = false;\n    notifyListeners();\n    const storedTodo: StoredTodo = {\n        done: todo.done,\n        body: todo.body,\n        time: todo.time\n    }\n    return bz\n        .then(client => client.db.tx.Upsert({\n            creator: client.db.address,\n            uuid: userConfig.uuid,\n            key: todo.time,\n            value: new TextEncoder().encode(JSON.stringify(storedTodo)),\n            metadata: new Uint8Array(),\n            lease: {days: 0, seconds: 0, years: 0, hours: 1, minutes: 0} \n        }))\n        .then(() => todo.synced = true)\n        .then(notifyListeners)\n}\n\n\n"]},"metadata":{},"sourceType":"module"}