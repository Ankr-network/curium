{"ast":null,"code":"var _jsxFileName = \"/home/scott/work/bluzelle/blzjs/examples/curium-todo/components/todo/TodoList.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { ListGroup, Spinner } from \"react-bootstrap\";\nimport { useEffect, useState } from \"react\";\nimport { TodoItem } from \"./TodoItem\";\nimport { onTodoListUpdated } from \"../../services/TodoService\";\nexport const TodoList = () => {\n  const {\n    0: todos,\n    1: setTodos\n  } = useState(null);\n  const refresh = useState()[1];\n  useEffect(() => onTodoListUpdated(setTodos), []);\n  useEffect(() => {\n    setInterval(() => refresh(Date.now()), 2000);\n  }, []);\n  return __jsx(ListGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, todos ? todos.length ? todos.map(todo => __jsx(TodoItem, {\n    key: todo.time,\n    todo: todo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 43\n    }\n  })) : 'No todos yet' : __jsx(Spinner, {\n    style: {\n      margin: 'auto'\n    },\n    animation: \"border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }));\n};","map":{"version":3,"sources":["/home/scott/work/bluzelle/blzjs/examples/curium-todo/components/todo/TodoList.tsx"],"names":["ListGroup","Spinner","useEffect","useState","TodoItem","onTodoListUpdated","TodoList","todos","setTodos","refresh","setInterval","Date","now","length","map","todo","time","margin"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,OAAnB,QAAiC,iBAAjC;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,SAAQC,QAAR,QAAuB,YAAvB;AACA,SAAQC,iBAAR,QAAgC,4BAAhC;AAGA,OAAO,MAAMC,QAAkB,GAAG,MAAM;AACpC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBL,QAAQ,CAAgB,IAAhB,CAAlC;AACA,QAAMM,OAAO,GAAGN,QAAQ,GAAW,CAAX,CAAxB;AAGAD,EAAAA,SAAS,CAAC,MAAMG,iBAAiB,CAACG,QAAD,CAAxB,EAAoC,EAApC,CAAT;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,WAAW,CAAC,MAAMD,OAAO,CAACE,IAAI,CAACC,GAAL,EAAD,CAAd,EAA4B,IAA5B,CAAX;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,SACQ,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKL,KAAK,GACFA,KAAK,CAACM,MAAN,GACIN,KAAK,CAACO,GAAN,CAAUC,IAAI,IAAI,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACC,IAApB;AAA0B,IAAA,IAAI,EAAED,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB,CADJ,GAGI,cAJF,GAOF,MAAC,OAAD;AAAS,IAAA,KAAK,EAAE;AAACE,MAAAA,MAAM,EAAE;AAAT,KAAhB;AAAkC,IAAA,SAAS,EAAC,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATR,CADR;AAcH,CAzBM","sourcesContent":["import {ListGroup, Spinner} from \"react-bootstrap\";\nimport {useEffect, useState} from \"react\";\nimport {TodoItem} from \"./TodoItem\";\nimport {onTodoListUpdated} from \"../../services/TodoService\";\nimport {Todo} from \"../../model/Todo\";\n\nexport const TodoList: React.FC = () => {\n    const [todos, setTodos] = useState<Todo[] | null>(null);\n    const refresh = useState<number>()[1];\n\n\n    useEffect(() => onTodoListUpdated(setTodos), [])\n\n    useEffect(() => {\n        setInterval(() => refresh(Date.now()), 2000);\n    }, [])\n\n    return (\n            <ListGroup>\n\n                {todos ? (\n                    todos.length ? (\n                        todos.map(todo => <TodoItem key={todo.time} todo={todo}/>)\n                    ) : (\n                        'No todos yet'\n                    )\n                ) : (\n                    <Spinner style={{margin: 'auto'}} animation=\"border\"/>\n                )}\n            </ListGroup>\n    )\n}"]},"metadata":{},"sourceType":"module"}