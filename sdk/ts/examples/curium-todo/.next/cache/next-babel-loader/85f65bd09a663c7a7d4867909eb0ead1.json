{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/scott/work/bluzelle/curium/sdk/ts/examples/curium-todo/components/ParamsForm.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Button, Form } from \"react-bootstrap\";\nimport { params as bluzelleParams, userParams as bluzelleUserParams } from '../services/TodoService';\nimport { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { extend } from 'lodash';\nexport var ParamsForm = function ParamsForm() {\n  var _useState = useState(bluzelleParams),\n      params = _useState[0],\n      setParams = _useState[1];\n\n  var _useState2 = useState(bluzelleUserParams),\n      userParams = _useState2[0],\n      setUserParams = _useState2[1];\n\n  var router = useRouter();\n\n  var _useState3 = useState(false),\n      connecting = _useState3[0],\n      setConnecting = _useState3[1];\n\n  var updateParam = function updateParam(name) {\n    return function (ev) {\n      return setParams(_objectSpread({}, params, _defineProperty({}, name, ev.target.value)));\n    };\n  };\n\n  var updateUserParam = function updateUserParam(name) {\n    return function (ev) {\n      return setUserParams(_objectSpread({}, userParams, _defineProperty({}, name, ev.target.value)));\n    };\n  };\n\n  var formSubmit = function formSubmit(ev) {\n    setConnecting(true);\n    extend(bluzelleParams, params);\n    extend(bluzelleUserParams, userParams);\n    ev.preventDefault();\n    router.push('/todo');\n  };\n\n  return __jsx(Form, {\n    onSubmit: formSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, __jsx(ParamFormField, {\n    label: \"Mnemonic\",\n    value: params.mnemonic,\n    onChange: updateParam('mnemonic'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }), __jsx(ParamFormField, {\n    label: \"Endpoint\",\n    value: params.url,\n    onChange: updateParam('url'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }), __jsx(ParamFormField, {\n    label: \"UUID\",\n    value: bluzelleUserParams.uuid,\n    onChange: updateUserParam('uuid'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }), __jsx(Button, {\n    variant: \"primary\",\n    onClick: formSubmit,\n    disabled: connecting,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, connecting ? 'Connecting...' : 'Connect'));\n};\nexport var ParamFormField = function ParamFormField(_ref) {\n  var label = _ref.label,\n      props = _objectWithoutProperties(_ref, [\"label\"]);\n\n  return __jsx(Form.Group, {\n    controlId: \"label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, __jsx(Form.Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, label), __jsx(Form.Control, _extends({\n    autoComplete: \"off\"\n  }, props, {\n    onBlur: props.onChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  })), __jsx(Form.Text, {\n    className: \"text-muted\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }));\n};","map":{"version":3,"sources":["/home/scott/work/bluzelle/curium/sdk/ts/examples/curium-todo/components/ParamsForm.tsx"],"names":["Button","Form","params","bluzelleParams","userParams","bluzelleUserParams","useState","useRouter","extend","ParamsForm","setParams","setUserParams","router","connecting","setConnecting","updateParam","name","ev","target","value","updateUserParam","formSubmit","preventDefault","push","mnemonic","url","uuid","ParamFormField","label","props","onChange"],"mappings":"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","sourcesContent":["import {Button, Form, Spinner} from \"react-bootstrap\";\nimport {params as bluzelleParams, userParams as bluzelleUserParams} from '../services/TodoService'\nimport {ChangeEvent, EventHandler, useState} from \"react\";\nimport {useRouter} from \"next/router\";\nimport {extend} from 'lodash';\n\nexport const ParamsForm: React.FC = () => {\n    const [params, setParams]:any = useState(bluzelleParams);\n    const [userParams, setUserParams]:any = useState(bluzelleUserParams);\n    const router = useRouter();\n    const [connecting, setConnecting] = useState<boolean>(false);\n\n    const updateParam = (name: string) => (ev: ChangeEvent<HTMLInputElement>) => setParams({...params, [name]: ev.target.value})\n    const updateUserParam = (name: string) => (ev: ChangeEvent<HTMLInputElement>) => setUserParams({...userParams, [name]: ev.target.value})\n\n    const formSubmit = ev => {\n        setConnecting(true);\n        extend(bluzelleParams, params);\n        extend(bluzelleUserParams, userParams);\n        ev.preventDefault();\n        router.push('/todo');\n    }\n\n    return (\n        <Form onSubmit={formSubmit}>\n            <ParamFormField label=\"Mnemonic\" value={params.mnemonic} onChange={updateParam('mnemonic')}/>\n            <ParamFormField label=\"Endpoint\" value={params.url} onChange={updateParam('url')}/>\n            <ParamFormField label=\"UUID\" value={bluzelleUserParams.uuid} onChange={updateUserParam('uuid')}/>\n            <Button variant=\"primary\" onClick={formSubmit} disabled={connecting}>\n                {connecting ? 'Connecting...' : 'Connect'}\n            </Button>\n        </Form>\n    )\n}\n\nexport const ParamFormField: React.FC<{ label: string, value: string, autoFocus?: boolean, onChange: EventHandler<ChangeEvent> }> = ({label, ...props}) => (\n    <Form.Group controlId=\"label\">\n        <Form.Label>{label}</Form.Label>\n        <Form.Control autoComplete=\"off\" {...props} onBlur={props.onChange}/>\n        <Form.Text className=\"text-muted\"/>\n    </Form.Group>\n\n)"]},"metadata":{},"sourceType":"module"}