import Head from 'next/head'
import styles from '../styles/Home.module.css'
import {ChangeEvent, SyntheticEvent, useState} from "react";
import {sha256} from 'js-sha256'
import {passThrough, passThroughAwait} from "promise-passthrough";
import {contentType} from 'mime-types'


export default function Home() {
    const [state, setState] = useState<string>('ready')

    return (
        <div className={styles.container}>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>

            <main className={styles.main}>
                <h2 className={styles.title}>
                    Bluzelle NFT Reliable Storage
                </h2>
                <input id="image-file" type="file" onInput={uploadFile(setState)}/>
                <div>{state.includes('done:') ? (
                    <>
                        <div>
                            <a href={`http://localhost:1317/nft/data/${state.replace('done:', '')}`} target="_blank">
                                node1
                            </a>
                        </div>
                        <div>
                            <a href={`http://localhost:1327/nft/data/${state.replace('done:', '')}`} target="_blank">
                                node2
                            </a>
                        </div>
                    </>
                ) : (state)}</div>
            </main>

        </div>
    )
}

const uploadFile = (setState: (state: string) => unknown) => (ev: ChangeEvent<HTMLInputElement>) => {
    setState('Uploading file');
    ev.target.files?.[0].arrayBuffer()
        .then(data => ({data, name: ev.target.files?.[0].name}))
        .then(ctx => ({...ctx, hash: sha256(ctx.data)}))
        .then(passThroughAwait(ctx => fetch(`http://localhost:1317/nft/upload/${ctx.hash}`, {
            method: 'POST',
            body: ctx.data
        })))
        .then(ctx => fetch(`http://localhost:3000/api/createNft`, {
            method: 'POST',
            body: JSON.stringify({
                id: ctx.hash,
                mime: contentType(ctx.name || '')
            })
        }).then(resp => resp.json()).then(({id}) => ({...ctx, id})))
        .then(passThrough(ctx => setState('file uploaded, checking replication status')))
        .then(ctx => fetch(`http://localhost:3000/api/waitForReplication`, {
            method: 'POST',
            body: JSON.stringify({id: ctx.id})
        }))
        .then(resp => resp.json())
        .then(resp => setState(`done:${resp.id}`))
}


